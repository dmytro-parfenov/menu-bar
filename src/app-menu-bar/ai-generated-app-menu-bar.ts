// This file is AI-generated by Gemini AI.
import { MenuBarInputListItemComponent } from "../menu-bar/components/menu-bar-input-list-item.component";
import { MenuBarListItemComponent } from "../menu-bar/components/menu-bar-list-item.component";
import { MenuBarListSectionItemComponent } from "../menu-bar/components/menu-bar-list-section-item.component";
import { MenuBarListSubmenuItemComponent } from "../menu-bar/components/menu-bar-list-submenu-item.component";
import { MenuBarMenuItemComponent } from "../menu-bar/components/menu-bar-menu-item.component";
import { MenuBarMenuComponent } from "../menu-bar/components/menu-bar-menu.component";
import { compoundMenuBarItem } from "../menu-bar/compound-menu-bar-item";
import { v4 } from "uuid";

/**
 * File
 */
const file = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "üìÅ File",
  },
  component: MenuBarMenuItemComponent,
});
file.add({
  id: v4(),
  properties: {
    title: "New",
    action: () => console.log("Create new"),
  },
  component: MenuBarListItemComponent,
});
file.add({
  id: v4(),
  properties: {
    title: "Open",
    label: "‚åò O",
  },
  component: MenuBarListItemComponent,
});
file.add({
  id: v4(),
  properties: {
    title: "Search",
    action: (value) => console.log("Search value changed", value),
  },
  component: MenuBarInputListItemComponent,
});
file.add({
  id: v4(),
  properties: {
    title: "üíæ Save",
  },
  component: MenuBarListItemComponent,
});

const download = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Download`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});

const microsoftWord = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Microsoft Word`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
microsoftWord.add({
  id: v4(),
  properties: {
    title: `.doc`,
  },
  component: MenuBarListItemComponent,
});
microsoftWord.add({
  id: v4(),
  properties: {
    title: `.docx`,
  },
  component: MenuBarListItemComponent,
});

const nestedLevel3 = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Nested level 3`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});

const nestedLevel4 = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Nested level 4`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
const nestedLevel5 = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Nested level 5`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
const nestedLevel6 = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Nested level 6`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
nestedLevel6.add({
  id: v4(),
  properties: {
    title: `Final level`,
  },
  component: MenuBarListItemComponent,
});

nestedLevel5.add(nestedLevel6);
nestedLevel4.add(nestedLevel5);
nestedLevel3.add(nestedLevel4);
microsoftWord.add(nestedLevel3);

download.add(microsoftWord);
download.add({
  id: v4(),
  properties: {
    title: `.pdf`,
  },
  component: MenuBarListItemComponent,
});

const downloadSection = compoundMenuBarItem({
  id: v4(),
  component: MenuBarListSectionItemComponent,
});

downloadSection.add(download);

file.add(downloadSection);
file.add({
  id: v4(),
  properties: {
    title: `Details`,
  },
  component: MenuBarListItemComponent,
});
file.add({
  id: v4(),
  properties: {
    title: `üóëÔ∏è Remove`,
  },
  component: MenuBarListItemComponent,
});

const versionHistory = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `Version history`,
    label: "‚Ä∫",
    disabled: true,
  },
  component: MenuBarListSubmenuItemComponent,
});

versionHistory.add({
  id: v4(),
  properties: {
    title: `Version 1`,
  },
  component: MenuBarListItemComponent,
});
versionHistory.add({
  id: v4(),
  properties: {
    title: `Version 2`,
  },
  component: MenuBarListItemComponent,
});

file.add(versionHistory);
file.add({
  id: v4(),
  properties: {
    title: `üñ®Ô∏è Print`,
  },
  component: MenuBarListItemComponent,
});

/**
 * Edit
 */
const edit = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "Edit",
  },
  component: MenuBarMenuItemComponent,
});

edit.add({
  id: v4(),
  properties: {
    title: `‚Ü©Ô∏è Undo`,
  },
  component: MenuBarListItemComponent,
});
edit.add({
  id: v4(),
  properties: {
    title: `‚Ü™Ô∏è Redo`,
    disabled: true,
  },
  component: MenuBarListItemComponent,
});

const cutSection = compoundMenuBarItem({
  id: v4(),
  component: MenuBarListSectionItemComponent,
});

cutSection.add({
  id: v4(),
  properties: {
    title: `‚úÇÔ∏è Cut`,
  },
  component: MenuBarListItemComponent,
});

edit.add(cutSection);
edit.add({
  id: v4(),
  properties: {
    title: `üóëÔ∏è Remove`,
  },
  component: MenuBarListItemComponent,
});

/**
 * View
 */
const view = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "View",
  },
  component: MenuBarMenuItemComponent,
});

const mode = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: `‚úèÔ∏è Mode`,
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
mode.add({
  id: v4(),
  properties: {
    title: `Editing`,
  },
  component: MenuBarListItemComponent,
});
mode.add({
  id: v4(),
  properties: {
    title: `üôã Suggesting`,
  },
  component: MenuBarListItemComponent,
});

view.add(mode);

const optionsSection = compoundMenuBarItem({
  id: v4(),
  component: MenuBarListSectionItemComponent,
});

optionsSection.add({
  id: v4(),
  properties: {
    title: `Pages`,
  },
  component: MenuBarListItemComponent,
});
optionsSection.add({
  id: v4(),
  properties: {
    title: `Comments`,
  },
  component: MenuBarListItemComponent,
});

view.add(optionsSection);
view.add({
  id: v4(),
  properties: {
    title: `üñ•Ô∏è Fullscreen`,
  },
  component: MenuBarListItemComponent,
});

/**
 * Window
 */
const window = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "Window",
    disabled: true,
  },
  component: MenuBarMenuItemComponent,
});

window.add({
  id: v4(),
  properties: {
    title: `Minimize`,
  },
  component: MenuBarListItemComponent,
});
window.add({
  id: v4(),
  properties: {
    title: `Zoom`,
  },
  component: MenuBarListItemComponent,
});

/**
 * Help
 */
const help = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "Help",
  },
  component: MenuBarMenuItemComponent,
});

const aboutSection = compoundMenuBarItem({
  id: v4(),
  component: MenuBarListSectionItemComponent,
});

aboutSection.add({
  id: v4(),
  properties: {
    title: `About`,
  },
  component: MenuBarListItemComponent,
});

help.add(aboutSection);
help.add({
  id: v4(),
  properties: {
    title: `Ask a question`,
    disabled: true,
  },
  component: MenuBarInputListItemComponent,
});
help.add({
  id: v4(),
  properties: {
    title: `Report an issue...`,
  },
  component: MenuBarListItemComponent,
});

// Test menu item
const test = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "üß™ Test",
  },
  component: MenuBarMenuItemComponent,
});

// menu item for testing purposes
test.add({
  id: v4(),
  properties: {
    title: "Test item 1",
  },
  component: MenuBarListItemComponent,
});
// menu item for testing purposes
test.add({
  id: v4(),
  properties: {
    title: "Test item 2",
  },
  component: MenuBarListItemComponent,
});

// menu item for testing purposes
const testSubMenu = compoundMenuBarItem({
  id: v4(),
  properties: {
    title: "Submenu",
    label: "‚Ä∫",
  },
  component: MenuBarListSubmenuItemComponent,
});
// menu item for testing purposes
testSubMenu.add({
  id: v4(),
  properties: {
    title: "Sub item 1",
  },
  component: MenuBarListItemComponent,
});
// menu item for testing purposes
testSubMenu.add({
  id: v4(),
  properties: {
    title: "Sub item 2",
  },
  component: MenuBarListItemComponent,
});

test.add(testSubMenu);

/**
 * Menu bar
 */
export const aiGeneratedAppMenuBar = compoundMenuBarItem({
  id: v4(),
  component: MenuBarMenuComponent,
});

aiGeneratedAppMenuBar.add(file);
aiGeneratedAppMenuBar.add(edit);
aiGeneratedAppMenuBar.add(view);
aiGeneratedAppMenuBar.add(window);
aiGeneratedAppMenuBar.add(help);
aiGeneratedAppMenuBar.add(test); // Add test menu
aiGeneratedAppMenuBar.add({
  id: v4(),
  properties: {
    title: `Settings`,
  },
  component: MenuBarMenuItemComponent,
});
aiGeneratedAppMenuBar.add({
  id: v4(),
  properties: {
    title: `Developer`,
  },
  component: MenuBarMenuItemComponent,
});